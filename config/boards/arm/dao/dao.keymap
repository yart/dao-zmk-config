/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "../../../../../helper/helper.h"
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };
// .--------.-----.-----.-----.-----.-----.-----.   .-----.-----.-----.-----.-----.------.-------.
// |   00   |  01 |  02 |  03 |  04 |  05 |  06 |   |  07 |  08 |  09 |  10 |  11 |  12  |   13  |
// |        |     |     |     |     |     |     |   |     |     |     |     |     |      |       |
// '--------------+--9--+--7--+--5--+--3--+--1--|   |--2--+--4--+--6--+--8--+--0--+------+-------'
//          |  14 |  15 |  16 |  17 |  18 |  19 |   |  20 |  21 |  22 |  23 |  24 |  25  |
//          |     |     |     |     |     |     |   |     |     |     |     |     |      |
//          |-----+-----+-----+-----+-----+-----|   |-----+-----+-----+-----+-----+------|
//          |  26 |  27 |  28 |  29 |  30 |  31 |   |  32 |  33 |  34 |  35 |  36 |  37  |
//          |     |     |     |     |     |     |   |     |     |     |     |     |      |
//          '-----'-----'-----+-----+-----+-----|   |-----+-----+-----+-----'-----'------'
//                            |  38 |  39 |  40 |   |  41 |  42 |  43 |
//                            |     |     |     |   |     |     |     |
//                            '-----'-----'-----'   '-----'-----'-----'
        combos {
            compatible = "zmk,combos";

            kp_2 {
                bindings = <&kp N2>;
                key-positions = <7 20>;
                layers = <0>;
            };

            kp_1 {
                bindings = <&kp N1>;
                key-positions = <6 19>;
                layers = <0>;
            };

            kp_4 {
                bindings = <&kp N4>;
                key-positions = <8 21>;
                layers = <0>;
            };

            kp_3 {
                bindings = <&kp N3>;
                key-positions = <5 18>;
                layers = <0>;
            };

            kp_6 {
                bindings = <&kp N6>;
                key-positions = <9 22>;
                layers = <0>;
            };

            kp_5 {
                bindings = <&kp N5>;
                key-positions = <4 17>;
                layers = <0>;
            };

            kp_8 {
                bindings = <&kp N8>;
                key-positions = <10 23>;
                layers = <0>;
            };

            kp_7 {
                bindings = <&kp N7>;
                key-positions = <3 16>;
                layers = <0>;
            };

            kp_0 {
                bindings = <&kp N0>;
                key-positions = <11 24>;
                layers = <0>;
            };

            kp_9 {
                bindings = <&kp N9>;
                key-positions = <2 15>;
                layers = <0>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// .--------.-----.-----.-----.-----.-----.-----.   .-----.-----.-----.-----.-----.------.-------.
// |   00   |  01 |  02 |  03 |  04 |  05 |  06 |   |  07 |  08 |  09 |  10 |  11 |  12  |   13  |
// |GUI SLCK|ALT ~|  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |RALT [| GUI ] |
// '--------+-----+-----+-----+-----+-----+--- -|   |-----+-----+-----+-----+-----+------+-------'
//          |  14 |  15 |  16 |  17 |  18 |  19 |   |  20 |  21 |  22 |  23 |  24 |  25  |
//          |SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |SHFT '|
//          |-----+-----+-----+-----+-----+-----|   |-----+-----+-----+-----+-----+------|
//          |  26 |  27 |  28 |  29 |  30 |  31 |   |  32 |  33 |  34 |  35 |  36 |  37  |
//          |CTR \|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |CTRL -|
//          '-----'-----'-----+-----+-----+-----|   |-----+-----+-----+-----'-----'------'
//                            |  38 |  39 |  40 |   |  41 |  42 |  43 |
//                            | ADJ | RSE | LWR |   | LWR | RSE | ADJ |
//                            '-----'-----'-----'   '-----'-----'-----'

                        bindings = <
   &mt LWIN SLCK &mt LALT GRAVE &kp Q      &kp W       &kp E       &kp R      &kp T     &kp Y  &kp U  &kp I     &kp O    &kp P    &mt RALT LBKT   &mt RWIN RBKT
                 &kp LSHFT      &hm LGUI A &hm LSHFT S &hm LCTRL D &hm LALT F &kp G     &kp H  &kp J  &kp K     &kp L    &kp SEMI &mt RSHFT SQT
                 &mt LCTRL BSLH &kp Z      &kp X       &kp C       &kp V      &kp B     &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &mt RCTRL MINUS
                                               &lt ADJ TAB &lt RSE RET &lt LWR SPACE   &lt LWR BSPC &lt RSE ESC &lt ADJ DEL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------------
// |        |     |  F1 |  F2 |  F3 | F4  |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 |  F11 |  F12  |
//          |     | ^+A | INS | DEL |PSCRN|  %  |   |  ←  |  ↓  |  ↑  |  →  |     |↑ BSPC|
//          |CTR +| ^+Z | ^+X | ^+C | ^+V |^+INS|   |HOME |PG_DN|PG_UP| END |     |^ RET |
//                            |     |     |     |   |     |     |     |
                        bindings = <
   &trans &trans         &kp F1    &kp F2    &kp F3    &kp F4    &kp F5          &kp F6   &kp F7    &kp F8    &kp F9    &kp F10    &kp F11        &mt RGUI F12
          &trans         &kp LC(A) &kp INS   &kp DEL   &kp PSCRN &kp LS(INS)     &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &kp &trans &mt RSHFT BSPC
          &mt LCTRL PLUS &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp LC(INS)     &kp HOME &kp PG_DN &kp PG_UP &kp END   &kp &trans &mt RCTRL RET
                                                         &trans &trans &trans   &trans &trans &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------------
// |        | APP |↑+G+Q|GUI+W|GUI+E|GUI+R|     |   | NRET| 7 & | 8 * | 9 ( | 0 ) |BSPC |GUI NMLK|
//          |     |     |GUI+S|GUI+D|     |     |   | NUM,| 4 $ | 5 % | 6 ^ | = + | NUM.|
//          |     |BTCLR| BT0 | BT1 | BT2 | BT3 |   | ? / | 1 ! | 2 @ | 3 # | - _ |     |
//                            |     |     |     |   |     |     |     |
                        bindings = <
   &trans &kp K_APP  &kp LS(RG(Q)) &kp RG(W)    &kp RG(E)    &kp RG(R)    &none            &kp KP_ENTER &kp N7 &kp N8 &kp N9 &kp N0    &kp BSPC         &mt RGUI KP_NUM
          &trans     &none         &kp RG(S)    &kp RG(D)    &none        &none            &kp KP_COMMA &kp N4 &kp N5 &kp N6 &kp EQUAL &mt RSHFT KP_DOT
          &trans     &bt BT_CLR    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3     &kp SLASH    &kp N1 &kp N2 &kp N3 &kp MINUS &trans
                                                              &trans &trans &lt ADJ RET   &lt ADJ ESC &trans &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------------
// |  RST   |BLDR | ^+Q | ^+W | M+E | M+R | M+T |   | M+Y |     | M+8 |     | M+P | BLDR |  RST  |
//          |CAPS | M+A | M+S | M+D | M+F |     |   | M+H |     | M+K | M+L | M+; | M+'  |
//          |     |     | M+X | M+C | M+V | M+6 |   | M+9 | M+0 | M+, | M+. | M+/ | M+-  |
//                            |     |     |     |   |     |     |     |
                        bindings = <
   &reset &bootloader &kp RC(Q) &kp RC(W) &kp RA(E) &kp RA(R) &kp RA(T)      &kp RA(Y)  &none      &kp RA(N8)    &none       &kp RA(P)    &bootloader   &reset
          &kp CAPS    &kp RA(A) &kp RA(S) &kp RA(D) &kp RA(F) &none          &kp RA(H)  &none      &kp RA(K)     &kp RA(L)   &kp RA(SEMI) &kp RA(SQT)
          &trans      &none     &kp RA(X) &kp RA(C) &kp RA(V) &kp RA(N6)     &kp RA(N9) &kp RA(N0) &kp RA(COMMA) &kp RA(DOT) &kp RA(FSLH) &kp RA(MINUS)
                                                      &trans &none &trans   &trans &none &trans
                        >;
                };
        };
};
